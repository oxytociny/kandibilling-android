<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 24.3.4">

    <issue
        id="CommitPrefEdits"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Missing `commit()` on `SharedPreference` editor"
        explanation="After calling `edit()` on a `SharedPreference`, you must call `commit()` or `apply()` on the editor to save the results."
        errorLine1="  ed.commit();"
        errorLine2="  ~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\login\LoginStorageUtils.java"
            line="51"
            column="3"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the `android.os.Build.VERSION_CODES` javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.

To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        android:targetSdkVersion=&quot;22&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\AndroidManifest.xml"
            line="9"
            column="9"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.

To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdkVersion 22"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\build.gradle"
            line="9"
            column="9"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 28 (Error thrown in AuthPurchRet)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   Log.e(&quot;Error thrown in AuthPurchRet&quot;,&quot;&quot; + E);"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\purchase\AuthorizePurchaseReturnable.java"
            line="71"
            column="4"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 30 (Authorize Purchase returnable )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   Log.e(&quot;Authorize Purchase returnable &quot;, &quot; Error retreiving array list &quot;, E);"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\purchase\AuthorizePurchaseReturnable.java"
            line="137"
            column="4"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 24 (Request Validate In App )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="    Log.e(&quot;Request Validate In App &quot;, &quot;login Result is null!&quot;);"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="210"
            column="5"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 35 (Returned ValidatePurchaseReturnable)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="        Log.i(&quot;Returned ValidatePurchaseReturnable&quot;,"
        errorLine2="        ^">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="242"
            column="9"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 28 (VALIDATEPURCHASE RESPONSE IS)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  if (debug) Log.e(&quot;VALIDATEPURCHASE RESPONSE IS&quot;, &quot;&quot; + resp);"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="256"
            column="14"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 26 (Kandilibs/Networking error)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   if (debug) Log.e(&quot;Kandilibs/Networking error&quot;, myResponse.getCode() + &quot; returned&quot;);"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="258"
            column="15"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 26 (CheckPurchase library call)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   if (debug) Log.e(&quot;CheckPurchase library call&quot; , &quot;User needs to be logged in.&quot;);"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="372"
            column="15"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 28 (Retreiving Purchase History )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="    if (debug) Log.i(&quot;Retreiving Purchase History &quot; , &quot;Tokens Sucessfully retreivied from server&quot;); "
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="393"
            column="16"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 30 (Checking token from purchases )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="    if (debug) Log.i(&quot;Checking token from purchases &quot;  , &quot; Token was &quot; + ((mTokens.contains(token) == true) ? &quot; found &quot; : &quot; not found - token not purchased by user &quot;)); "
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="394"
            column="16"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 28 (Retreiving Purchase History )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="    if (debug) Log.e(&quot;Retreiving Purchase History &quot; , &quot;Trouble Retreiving list... Try again later&quot;);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="400"
            column="16"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 28 (Retreiving Purchase History )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="    if (debug) Log.e(&quot;Retreiving Purchase History &quot; , &quot;No purchases found&quot;);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="406"
            column="16"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 34 (KandiLibs - RequestPurchaseHistory)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  if (debug) Log.i(&quot;KandiLibs - RequestPurchaseHistory&quot;,&quot;method called&quot;);"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="434"
            column="14"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 24 (RequestPurchase History )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   if (debug) Log.e(&quot;RequestPurchase History &quot; , &quot;error! login result is null&quot;);"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="441"
            column="15"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 34 (KandiLibs - RequestPurchaseHistory)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   if (debug) Log.i(&quot;KandiLibs - RequestPurchaseHistory&quot;,&quot;Instantiating variables &quot;);"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="446"
            column="15"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 29 (Server response from get list)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   if (debug) Log.i(&quot;Server response from get list&quot; , &quot;&quot; + jsonResponse.getCode());"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="469"
            column="15"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 24 (Gold balance Retreiveal )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   if (debug) Log.e(&quot;Gold balance Retreiveal &quot; , &quot; &quot;, e);"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="559"
            column="15"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 58 (error thrown in retreiving userverify , when not logged in)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   if (debug) Log.e(&quot;error thrown in retreiving userverify , when not logged in&quot; , &quot;printing error: &quot; + E);"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="587"
            column="15"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 32 (Code from request User verify : )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="        if (debug) Log.e(&quot;Code from request User verify : &quot; , &quot;&quot; + jsonResponse.getCode());"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="610"
            column="20"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 41 (error thrown in request User verification)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="      if (debug) Log.e(&quot;error thrown in request User verification&quot;, &quot;Error is : &quot;+ E);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="623"
            column="18"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 39 (Error thrown in request userVerfication)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   if (debug) Log.i(&quot;Error thrown in request userVerfication&quot;,"
        errorLine2="              ^">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\library\KandiLibs.java"
            line="629"
            column="15"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 38 (Login Failed (not just unsucessful) : )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  Log.e(&quot;Login Failed (not just unsucessful) : &quot; , &quot;error code : &quot; + errorCode ); "
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\login\LoginActivity.java"
            line="182"
            column="3"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 26 (login return code not 200 )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="   Log.e(&quot;login return code not 200 &quot;, &quot;error code : &quot; + resultCode);"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\login\LoginAsyncTask.java"
            line="44"
            column="4"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 40 (Exception thrown in UserInfoInstantiator)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="      Log.e(&quot;Exception thrown in UserInfoInstantiator&quot;,"
        errorLine2="      ^">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\utils\UserInfoObject.java"
            line="72"
            column="7"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 30 (should be setting login result)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  if (KandiLibs.debug) Log.i(&quot;should be setting login result&quot;, &quot;about to print&quot;);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\utils\UserInfoObject.java"
            line="98"
            column="24"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 29 (Validate Purchase Returnable )"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  if (KandiLibs.debug) Log.i(&quot;Validate Purchase Returnable &quot; , sb.toString());"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\validation\ValidatePurchaseReturnable.java"
            line="68"
            column="24"/>
    </issue>

    <issue
        id="LongLogTag"
        severity="Error"
        message="The logging tag can be at most 23 characters, was 24 (Validate User Returnable)"
        category="Correctness"
        priority="5"
        summary="Too Long Log Tags"
        explanation="Log tags are only allowed to be at most 23 tag characters long."
        errorLine1="  if (Logger.isDebug) Log.i(&quot;Validate User Returnable&quot; , sb.toString()); "
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\validation\ValidateUserReturnable.java"
            line="40"
            column="23"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `minSdkVersion` value (`15`) is not used; it is always overridden by the value specified in the Gradle build script (`15`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="        android:minSdkVersion=&quot;15&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\AndroidManifest.xml"
            line="8"
            column="9"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `targetSdkVersion` value (`22`) is not used; it is always overridden by the value specified in the Gradle build script (`22`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="        android:targetSdkVersion=&quot;22&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\AndroidManifest.xml"
            line="9"
            column="9"/>
    </issue>

    <issue
        id="AddJavascriptInterface"
        severity="Warning"
        message="`WebView.addJavascriptInterface` should not be called with minSdkVersion &lt; 17 for security reasons: JavaScript can use reflection to manipulate application"
        category="Security"
        priority="9"
        summary="addJavascriptInterface Called"
        explanation="For applications built for API levels below 17, `WebView#addJavascriptInterface` presents a security hazard as JavaScript on the target web page has the ability to use reflection to access the injected object&apos;s public fields and thus manipulate the host application in unintended ways."
        url="https://labs.mwrinfosecurity.com/blog/2013/09/24/webview-addjavascriptinterface-remote-code-execution/"
        urls="https://labs.mwrinfosecurity.com/blog/2013/09/24/webview-addjavascriptinterface-remote-code-execution/"
        errorLine1="     wv.addJavascriptInterface(wai, &quot;Android&quot;);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\java\tools\mikandi\dev\ads\FullScreenAd.java"
            line="88"
            column="9"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/inapp_loginbackground` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@drawable/inapp_loginbackground&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\emailcheck_layout.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/white` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1="    android:background=&quot;@color/white&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\fragment_validate_purchase.xml"
            line="9"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/inapp_loginbackground` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@drawable/inapp_loginbackground&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\login_activity.xml"
            line="6"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/inapp_loginbackground` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@drawable/inapp_loginbackground&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\onetapreg_activity.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/inapp_loginbackground` with a theme that also paints a background (inferred theme is `@android:style/Theme.Holo`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.

NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.

If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.

Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.
"
        errorLine1=" android:background=&quot;@drawable/inapp_loginbackground&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\passwordreset_layout.xml"
            line="5"
            column="2"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.activity_validate_purchase` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\activity_validate_purchase.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.btn_ab_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;btn_ab_top&quot;>#16a5d7&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values\button_colors.xml"
            line="38"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.btn_ab_bottom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;btn_ab_bottom&quot;>#060606&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values\button_colors.xml"
            line="39"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.btn_link_tc` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;btn_link_tc&quot;>#101010&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values\colors.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.title_overlay_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;title_overlay_background&quot;>@color/shadow&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values\colors.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.grey_darker` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name =&quot;grey_darker&quot;>#5B5A5A&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values\colors.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.grey_light` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;grey_light&quot;>#dbdbdb&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values\colors.xml"
            line="16"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.grey_dark` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;color name=&quot;grey_dark&quot;>#6c6c6c&lt;/color>  "
        errorLine2="           ~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values\colors.xml"
            line="17"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.dimen_webview_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name = &quot;dimen_webview_width&quot;>300dip&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values\dimensions.xml"
            line="19"
            column="12"/>
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values-v11\dimensions.xml"
            line="19"
            column="12"/>
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values-v14\dimensions.xml"
            line="19"
            column="12"/>
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\values-w820dp\dimensions.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.fragment_validate_purchase` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\fragment_validate_purchase.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_hentai` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\drawable-hdpi\ic_hentai.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_icongold` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\drawable-hdpi\ic_icongold.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.onetapreg_activity` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\onetapreg_activity.xml"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_help_icon` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="   android:src=&quot;@+drawable/ic_help_icon&quot; />"
        errorLine2="   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\onetapreg_activity.xml"
            line="155"
            column="4"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.menu.validate_purchase` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\menu\validate_purchase.xml"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/droparrow.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\drawable\droparrow.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/inapp_loginbackground.jpeg` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon *really* is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\drawable\inapp_loginbackground.jpeg"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-hdpi`: ic_launcher.png (found in drawable-xhdpi, drawable-xxhdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\drawable-hdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xhdpi`: ic_close.png, ic_hentai.png, ic_icongold.png"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\drawable-xhdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xxhdpi`: ic_close.png, ic_hentai.png, ic_icongold.png"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\drawable-xxhdpi"/>
    </issue>

    <issue
        id="IconMissingDensityFolder"
        severity="Warning"
        message="Missing density variation folders in `src\main\res`: drawable-mdpi, drawable-xxxhdpi"
        category="Usability:Icons"
        priority="3"
        summary="Missing density folder"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.

Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="The view name (`@+id/passwordReset_emailField`) suggests this is a password, but it does not include &apos;`textPassword`&apos; in the `inputType`"
        category="Usability"
        priority="5"
        summary="Missing `inputType` or `hint`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). Similarly,a hint attribute displays a hint to the user for what is expected in the text field.

The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.

If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="  android:inputType=&quot;textEmailAddress&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio,adt">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\passwordreset_layout.xml"
            line="43"
            column="3"/>
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\passwordreset_layout.xml"
            line="38"
            column="3"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="[Accessibility] Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.

Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.

Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="       &lt;ImageView"
        errorLine2="       ^"
        quickfix="studio,adt">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\fullscreen.xml"
            line="16"
            column="8"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_alignEnd=&quot;@id/webview&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignRight=&quot;@id/webview&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\fullscreen.xml"
            line="21"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_marginEnd=&quot;12dip&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_marginRight=&quot;12dip&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\fullscreen.xml"
            line="23"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_alignEnd=&quot;@+id/PasswordField&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="     android:layout_alignRight=&quot;@+id/PasswordField&quot;"
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\login_activity.xml"
            line="78"
            column="6"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_toEndOf=&quot;@+id/login_textview_welcomeBanner&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="     android:layout_toRightOf=&quot;@+id/login_textview_welcomeBanner&quot;"
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\login_activity.xml"
            line="81"
            column="6"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_alignStart=&quot;@+id/PasswordField&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="     android:layout_alignLeft=&quot;@+id/PasswordField&quot;"
        errorLine2="     ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\login_activity.xml"
            line="96"
            column="6"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\onetapreg_activity.xml"
            line="42"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:drawableEnd=&quot;@drawable/droparrow&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:drawableRight=&quot;@drawable/droparrow&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\onetapreg_activity.xml"
            line="54"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\onetapreg_activity.xml"
            line="74"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\passwordreset_layout.xml"
            line="73"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider adding `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Bi-directional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.

For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. *NOTE*: If your `minSdkVersion` is less than 17, you should add *both* the older left/right attributes *as well as* the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.

(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="C:\Users\vetruven\Documents\work\Kandi-tools-library\app\src\main\res\layout\passwordreset_layout.xml"
            line="84"
            column="3"/>
    </issue>

</issues>
